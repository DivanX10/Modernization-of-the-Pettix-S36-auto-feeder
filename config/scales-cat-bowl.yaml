substitutions:
  board_name: Scales for a cat
  node_name: scales-cat-bowl

esphome:
  name: ${node_name}
  comment: WeMos D1 Scales for a cat bowl

esp8266:
  board: d1_mini
  framework:
    version: recommended

#Учетные данные Wi-Fi для подключения платы к домашней сети
wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password
  fast_connect: off
  reboot_timeout: 5min

#Если не будет связи с WiFi, то поднимется точка доступа
  ap:
    ssid: ESP Cat bowl Hotspot
    password: !secret ap_esp_password

#Компонент captive portal в ESPHome является резервным механизмом на случай сбоя подключения к настроенному Wi-Fi.
captive_portal:

#Веб сервер
web_server:
  port: 80

#Журналирование
logger:
  level: ERROR

#Enable OTA
ota:
  password: "esphome"

#Enable Home Assistant API
#Шифрование выключил для снижения нагрузки на ESP
api:

#####################################################################################
################################## Сенсор ###########################################
sensor:
#Сенсор общего веса
  - platform: hx711
    name: "${node_name} Weight"
    icon: mdi:scale
    id: idWeight
    dout_pin: D7 # DT зеленый провод
    clk_pin: D6  # SCK белый провод
    gain: 64
    update_interval: 1s
    unit_of_measurement: g
    accuracy_decimals: 0
    device_class: weight
    state_class: measurement
    entity_category: diagnostic
    internal: False
    filters:
      - calibrate_linear:
          - 56194 -> 0
          - 127044 -> 500
      - median:
          window_size: 7
          send_every: 5
          send_first_at: 4
      #Если миска извлечена, то вес корма будет 0
      - lambda: !lambda |-
          if (x < 0) return 0;
          return x;
    on_value:
      then:
      - if:
          condition:
              #Если вес миски ниже 20, значит миски нет
              - lambda: 'return id(idWeight).state < 20;'
          then:
              #Опубликовать статус OFF
              - binary_sensor.template.publish:
                  id: idBowl
                  state: OFF
      - if:
          condition:
              #Если вес миски выше 60, значит миска на месте
              - lambda: 'return id(idWeight).state > 60;'
          then:
              #Опубликовать статус ON
              - binary_sensor.template.publish:
                  id: idBowl
                  state: ON

#Сенсор веса корма в миске
  - platform: template
    name: "${node_name} Weight Food"
    id: idWeightFood
    update_interval: 1s
    unit_of_measurement: g
    accuracy_decimals: 0
    device_class: weight
    state_class: measurement
    icon: mdi:weight-gram
    lambda: 'return id(idWeight).state - id(idSetWeightBowl).state;' #Вычитаем вес миски и получаем вес корма
    filters:
        #Если миска извлечена, то вес корма будет 0
        - lambda: !lambda |-
            if (x < 0) return 0;
            return x;
        #Используем фильтр медиану
        - median:
            window_size: 7
            send_every: 5
            send_first_at: 4
    on_value:
      then:
      - if:
          condition:
              #Если вес миски ниже 1, значит корма в миске нет
              - lambda: 'return id(idWeightFood).state < 1;'
          then:
              #Опубликовать статус OFF
              - binary_sensor.template.publish:
                  id: idFood
                  state: OFF
      - if:
          condition:
              #Если вес миски выше 1, значит корм в миске есть
              - lambda: 'return id(idWeightFood).state > 1;'
          then:
              #Опубликовать статус ON
              - binary_sensor.template.publish:
                  id: idFood
                  state: ON

#Сенсор уровня сигнала WiFi
  - platform: wifi_signal
    name: ${node_name} RSSI WiFi
    icon: mdi:wifi
    update_interval: 60s

#Скрытый сенсор безотказной работы в секундах
  - platform: uptime
    name: "${node_name} Uptime sec"
    icon: mdi:clock-outline
    id: uptime_sensor
    internal: True #Скрыть - true \показать - false
    update_interval: 60s
    on_raw_value:
      then:
        - text_sensor.template.publish:
            id: uptime_esp
            state: !lambda |-
              int seconds = round(id(uptime_sensor).raw_state);
              int days = seconds / (24 * 3600);
              seconds = seconds % (24 * 3600);
              int hours = seconds / 3600;
              seconds = seconds % 3600;
              int minutes = seconds /  60;
              seconds = seconds % 60;
              return (
                (days ? String(days) + "d " : "") +
                (hours ? String(hours) + "h " : "") +
                (String(minutes) + "m")
              ).c_str();


#####################################################################################
################################## Бинарный сенсор ##################################
binary_sensor:
#Наличие миски
  - platform: template
    name: "${node_name} Bowl"
    icon: mdi:bowl
    id: idBowl
    internal: false #Скрыть - true \показать - false

#Наличие корма в миске
  - platform: template
    name: "${node_name} Food"
    icon: mdi:bowl
    id: idFood
    internal: false #Скрыть - true \показать - false


#####################################################################################
################################### Текстовый сенсор ################################
#Показать IP адрес
text_sensor:
  - platform: wifi_info
    ip_address:
      name: "${node_name} IP"
#    ssid:
#      name: ${board_name} SSID
#    bssid:
#      name: ${board_name} BSSID
#    mac_address:
#      name: ${board_name} Mac
#    scan_results:
#      name: ${board_name} Latest_Scan_Results

#Время безотказной работы
  - platform: template
    name: "${node_name} Uptime ESP"
    id: uptime_esp
    icon: mdi:clock-start
    entity_category: diagnostic


#####################################################################################
####################################### Число #######################################
#Ползунок для управления сервоприводом
#Указать вес для миски
number:
  - platform: template
    name: "${node_name} Set weight for bowl"
    id: idSetWeightBowl
    min_value: 70
    max_value: 100
    step: 1
    mode: slider #slider/box
    optimistic: true
    restore_value: true


#####################################################################################
####################################### Кнопка ######################################
button:
  - platform: restart
    name: "${node_name} Restart ESP"
    icon: mdi:restart


#####################################################################################
####################################### Время #######################################
time:
  - platform: sntp
    id: sntp_time
    timezone: Europe/Moscow
    